<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pawel Grzesik</title>
    <link>https://wolfedale.github.io/</link>
    <description>Recent content on Pawel Grzesik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 06 Dec 2019 19:41:16 +0100</lastBuildDate>
    
	<atom:link href="https://wolfedale.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Automate Prometheus Alerts in Kubernetes</title>
      <link>https://wolfedale.github.io/posts/automate-prometheus-alerts-in-kubernetes/</link>
      <pubDate>Fri, 06 Dec 2019 19:41:16 +0100</pubDate>
      
      <guid>https://wolfedale.github.io/posts/automate-prometheus-alerts-in-kubernetes/</guid>
      <description>To keep monitoring rules up to date it&amp;rsquo;s not an easy task. Especially when we are running a lot of services, or when we are growing too fast. There is few ways how we can handle it. For example we can use pipelines and add new monitoring rules to every new service we are deploying. Depends on our piplines and size of services, it might be easy or not. In my case this method worked at the beginning, later on I started to have issues.</description>
    </item>
    
    <item>
      <title>Automate SSL Certificates in Kubernetes</title>
      <link>https://wolfedale.github.io/posts/automate-ssl-certificates-in-kubernetes/</link>
      <pubDate>Fri, 06 Sep 2019 14:16:07 +0200</pubDate>
      
      <guid>https://wolfedale.github.io/posts/automate-ssl-certificates-in-kubernetes/</guid>
      <description>HTTPS is extremely important nowadays. It&amp;rsquo;s almost always a bad idea not use it, even in the internal traffic. The good news is that we have Let&amp;rsquo;s Encrypt which can provide us by free SSL/TLS certificates and API to generate these certificates automaticaly. There is a few ways to handle SSL Certificates in Kubernetes, we can either do it manually, by creating Secret and use it in the ingres like:</description>
    </item>
    
  </channel>
</rss>